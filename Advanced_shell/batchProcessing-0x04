#!/bin/bash
# Fetches the data of a list of Pokemon from the API in parallel
    
URL="https://pokeapi.co/api/v2/pokemon/"
ERROR_FILE="errors.txt"
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
    
function fetch_data() {
    local pokemon_name=$1
    local data_file="$pokemon_name.json"
    local retries=3

    response=$(curl -s $URL$pokemon_name)
    if [ $? -ne 0 ]; then
        while [ $retries -gt 0 ]; do
            response=$(curl -s $URL$pokemon_name)
            if [ $? -eq 0 ]; then
                break
            fi
            retries=$((retries-1))
        done

        echo "Error: Could not get data from $URL$pokemon_name" >> $ERROR_FILE
        return 1
    fi

    if [ response == "Not Found" ]; then
        echo "Error: Pokemon $pokemon_name not found" >> $ERROR_FILE
        return 1
    fi

    echo $response | jq '.' > $data_file
    echo "Data saved to $data_file"
    return 0
}

job_pids=()

trap 'echo "Terminating..."; kill ${job_pids[*]} 2>/dev/null; exit 1' SIGINT SIGTERM

for pokemon in ${POKEMON_LIST[@]}; do
    fetch_data $pokemon &
    job_pids+=($!)
done

echo "Background jobs:"
jobs

wait
echo "All data fetched"